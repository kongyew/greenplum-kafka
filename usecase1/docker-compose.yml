version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.0.0
    container_name: zookeeper
    hostname: "zookeeper"
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"
      - "localhost: 127.0.0.1"
    volumes:
      - .:/code
    privileged: true
    networks:
        mynetwork:
          aliases:
            - zookeeper
            - zookeeper.localdomain.com
  kafka:
    image: confluentinc/cp-kafka:4.0.0
    container_name: kafka
    hostname: "kafka"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
      - "moby:127.0.0.1"
      - "localhost: 127.0.0.1"
    volumes:
      - .:/code
    privileged: true
    networks:
      mynetwork:
        aliases:
          - kafka
          - kafka.localdomain.com
  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest
  #   container_name: restproxy
  #   hostname: "restproxy"
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - schema-registry
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     KAFKA_REST_ZOOKEEPER_CONNECT-: "zookeeper:2181"
  #     RP_SCHEMA_REGISTRY_URL: "http://registry:8081"
  #     KAFKA_REST_HOST_NAME: "restproxy"
  #     KAFKA_REST_BOOTSTRAP_SERVERS: "kafka:9092"
  #   extra_hosts:
  #     - "moby:127.0.0.1"
  #     - "localhost: 127.0.0.1"
  #   networks:
  #       mynetwork:
  #         aliases:
  #           - restproxy
  #           - restproxy.localdomain.com
  # schema-registry:
  #   image: confluentinc/cp-schema-registry:4.0.0
  #   container_name: schema-registry
  #   hostname: "schema-registry"
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     SR_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
  #     SCHEMA_REGISTRY_HOST_NAME: "registry"
  #     SCHEMA_REGISTRY_LISTENERS: "http://localhost:8081"
  #   extra_hosts:
  #     - "moby:127.0.0.1"
  #     - "localhost: 127.0.0.1"
  #   networks:
  #     mynetwork:
  #       aliases:
  #         - schema-registry
  #         - schema-registry.localdomain.com
  # kafkaconnect:
  #   image: confluentinc/cp-kafka-connect:latest
  #   container_name: kafkaconnect
  #   hostname: "kafkaconnect"
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #     - schema-registry
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
  #     CONNECT_REST_PORT: 28083
  #     CONNECT_GROUP_ID: "quickstart-avro"
  #     CONNECT_CONFIG_STORAGE_TOPIC: "quickstart-avro-config"
  #     CONNECT_OFFSET_STORAGE_TOPIC: "quickstart-avro-offsets"
  #     CONNECT_STATUS_STORAGE_TOPIC: "quickstart-avro-status"
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
  #     CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
  #     CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://registry:8081"
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://registry:8081"
  #     CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
  #     CONNECT_LOG4J_ROOT_LOGLEVEL: "DEBUG"
  #     CONNECT_PLUGIN_PATH: '/tmp/quickstart/jars'
  #   volumes:
  #      - .:/code
  #      - ./kafka/quickstart/:/tmp/quickstart/
  #      - ./kafka/quickstart/jars:/tmp/quickstart/jars
  #   networks:
  #     mynetwork:
  #       aliases:
  #         - kafkaconnect
  #         - kafkaconnect.localdomain.com
  #      #- ./kafka/quickstart/jars:/etc/kafka-connect/jars \
  #   extra_hosts:
  #     - "moby:127.0.0.1"
  #     - "localhost: 127.0.0.1"
  gpdb:
        #image: "kochanpivotal/gpdb5oss:latest"
        image: "kochanpivotal/gpdb5"
        command: bin/bash
        hostname: "gpdbsne"
        container_name: gpdbsne
        environment:
          - START_GPDB=yes
        ports:
         - "5432:5432"
         - "5005:5005"
         - "5010:5010"
         - "9022:22"
         - "40000:40000"
         - "40001:40001"
         - "40002:40002"
        expose:
         - "5432"
        volumes:
         - .:/code
        tty: true
        privileged: true
        networks:
            mynetwork:
              aliases:
                - gpdbsne
                - gpdbsne.localdomain.com
  librdkafka:
        build:
          context: .
          dockerfile: kafka/dockerfile_librdkafka
        command: bash
        hostname: "librdkafka"
        container_name: librdkafka
        volumes:
         - .:/code
        tty: true
        privileged: true
        networks:
            mynetwork:
              aliases:
                - librdkafka
                - librdkafka.localdomain.com
networks:
    mynetwork:
      driver: bridge
